{"version":3,"sources":["components/shared-components/EllipsisDropdown/index.js","hooks/useFetching.js","views/app-views/basic/clients/list/index.js","views/app-views/basic/clients/groups/index.js","views/app-views/basic/clients/edit-client/index.js","views/app-views/basic/clients/index.js"],"names":["EllipsisDropdown","props","_jsx","Dropdown","overlay","menu","placement","trigger","children","className","EllipsisOutlined","defaultProps","Menu","useFetching","callback","isLoading","setIsLoading","useState","error","setError","async","arguments","e","message","List","history","useHistory","selectedRows","setSelectedRows","selectedRowKeys","setSelectedRowKeys","clients","setClients","stableClients","setStableClients","fetchClients","isClientsLoading","clientError","response","fetch","data","json","useEffect","tableColumns","title","dataIndex","sorter","a","b","utils","antdTableSorter","render","address","_jsxs","_Fragment","street","suite","city","zipcode","company","name","rowSelection","onChange","key","rows","Card","Flex","alignItems","justifyContent","mobileFlex","Input","placeholder","prefix","SearchOutlined","value","currentTarget","searchArray","wildCardSearch","onSearch","Loading","cover","Table","columns","dataSource","rowKey","type","preserveSelectedRowKeys","onRow","row","onClick","push","concat","id","editCLient","Groups","EditClient","params","useParams","client","setClient","updateIsLoading","setUpdateIsLoading","fetchClient","isClientLoading","isError","Form","layout","initialValues","onSubmitCapture","method","headers","body","JSON","stringify","setTimeout","onValuesChange","allValues","prevClient","Row","Col","xs","sm","md","lg","gutter","ROW_GUTTER","Item","label","rules","required","Button","htmlType","Clients","_ref","match","Switch","Redirect","exact","from","url","to","Route","path","component"],"mappings":"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","file":"static/js/15.efbe6d30.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Dropdown, Menu } from 'antd';\r\nimport { EllipsisOutlined } from '@ant-design/icons';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst EllipsisDropdown = props => {\r\n\treturn (\r\n\t\t<Dropdown overlay={props.menu} placement={props.placement} trigger={['click']}>\r\n\t\t\t<div className=\"ellipsis-dropdown\">\r\n\t\t\t\t<EllipsisOutlined />\r\n\t\t\t</div>\r\n\t\t</Dropdown>\r\n\t)\r\n}\r\n\r\nEllipsisDropdown.propTypes = {\r\n\ttrigger: PropTypes.string,\r\n\tplacement: PropTypes.string\r\n}\r\n\r\nEllipsisDropdown.defaultProps = {\r\n\ttrigger: 'click',\r\n\tplacement: 'bottomRight',\r\n\tmenu: <Menu/>\r\n};\r\n\r\nexport default EllipsisDropdown\r\n","import { useState } from \"react\";\r\n\r\nexport const useFetching = (callback) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const fetching = async (...args) => {\r\n    try {\r\n      setIsLoading(true);\r\n      await callback(...args);\r\n    } catch (e) {\r\n      setError(e.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return [fetching, isLoading, error];\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Card, Table, Select, Input, Button, Menu } from \"antd\";\r\nimport {\r\n  EyeOutlined,\r\n  DeleteOutlined,\r\n  SearchOutlined,\r\n  PlusCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport EllipsisDropdown from \"components/shared-components/EllipsisDropdown\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport utils from \"utils\";\r\nimport Loading from \"components/shared-components/Loading\";\r\nimport { useFetching } from \"hooks/useFetching\";\r\n\r\nconst List = () => {\r\n  let history = useHistory();\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n\r\n  const [clients, setClients] = useState(\"\");\r\n  const [stableClients, setStableClients] = useState(\"\");\r\n\r\n  const [fetchClients, isClientsLoading, clientError] = useFetching(\r\n    async () => {\r\n      const response = await fetch(\r\n        \"https://jsonplaceholder.typicode.com/users\"\r\n      );\r\n      const data = await response.json();\r\n      setClients(data);\r\n      setStableClients(data);\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    fetchClients();\r\n  }, []);\r\n\r\n  // const dropdownMenu = (row) => (\r\n  //   <Menu>\r\n  //     <Menu.Item onClick={() => editCLient(row)}>\r\n  //       <Flex alignItems=\"center\">\r\n  //         <EyeOutlined />\r\n  //         <span className=\"ml-2\">Edit client</span>\r\n  //       </Flex>\r\n  //     </Menu.Item>\r\n  //     <Menu.Item onClick={() => deleteRow(row)}>\r\n  //       <Flex alignItems=\"center\">\r\n  //         <DeleteOutlined />\r\n  //         <span className=\"ml-2\">\r\n  //           {selectedRows.length > 0\r\n  //             ? `Delete (${selectedRows.length})`\r\n  //             : \"Delete\"}\r\n  //         </span>\r\n  //       </Flex>\r\n  //     </Menu.Item>\r\n  //   </Menu>\r\n  // );\r\n\r\n  const editCLient = (row) => {\r\n    history.push(`/app/basic/clients/edit-client/${row.id}`);\r\n  };\r\n\r\n  // const deleteRow = (row) => {\r\n  //   const objKey = \"id\";\r\n  //   let data = stableClients;\r\n  //   if (selectedRows.length > 1) {\r\n  //     selectedRows.forEach((elm) => {\r\n  //       data = utils.deleteArrayRow(data, objKey, elm.id);\r\n  //       setClients(data);\r\n  //       setSelectedRows([]);\r\n  //     });\r\n  //   } else {\r\n  //     data = utils.deleteArrayRow(data, objKey, row.id);\r\n  //     setClients(data);\r\n  //   }\r\n  // };\r\n\r\n  const tableColumns = [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\",\r\n    },\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      sorter: (a, b) => utils.antdTableSorter(a, b, \"name\"),\r\n    },\r\n    {\r\n      title: \"Username\",\r\n      dataIndex: \"username\",\r\n      sorter: (a, b) => utils.antdTableSorter(a, b, \"username\"),\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      dataIndex: \"email\",\r\n      sorter: (a, b) => utils.antdTableSorter(a, b, \"email\"),\r\n    },\r\n    {\r\n      title: \"Address\",\r\n      dataIndex: \"address\",\r\n      render: (address) => (\r\n        <>\r\n          <div>\r\n            <b>Street:</b> {address.street}\r\n          </div>\r\n          <div>\r\n            <b>Suite:</b> {address.suite}\r\n          </div>\r\n          <div>\r\n            <b>City:</b> {address.city}\r\n          </div>\r\n          <div>\r\n            <b>Zipcode: </b> {address.zipcode}\r\n          </div>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Phone\",\r\n      dataIndex: \"phone\",\r\n    },\r\n    {\r\n      title: \"Website\",\r\n      dataIndex: \"website\",\r\n      sorter: (a, b) => utils.antdTableSorter(a, b, \"website\"),\r\n    },\r\n    {\r\n      title: \"Company\",\r\n      dataIndex: \"company\",\r\n      render: (company) => <span>{company.name}</span>,\r\n      sorter: (a, b) => utils.antdTableSorter(a.company, b.company, \"name\"),\r\n    },\r\n    // {\r\n    //   title: \"\",\r\n    //   dataIndex: \"actions\",\r\n    //   render: (_, elm) => (\r\n    //     <div className=\"text-right\">\r\n    //       <EllipsisDropdown menu={dropdownMenu(elm)} />\r\n    //     </div>\r\n    //   ),\r\n    // },\r\n  ];\r\n\r\n  const rowSelection = {\r\n    onChange: (key, rows) => {\r\n      setSelectedRows(rows);\r\n      setSelectedRowKeys(key);\r\n    },\r\n  };\r\n\r\n  const onSearch = (e) => {\r\n    const value = e.currentTarget.value;\r\n    const searchArray = e.currentTarget.value ? clients : stableClients;\r\n    const data = utils.wildCardSearch(searchArray, value);\r\n    setClients(data);\r\n    setSelectedRowKeys([]);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Flex alignItems=\"center\" justifyContent=\"between\" mobileFlex={false}>\r\n        <Flex className=\"mb-1\" mobileFlex={false}>\r\n          <div className=\"mr-md-3 mb-3\">\r\n            <Input\r\n              placeholder=\"Search\"\r\n              prefix={<SearchOutlined />}\r\n              onChange={(e) => onSearch(e)}\r\n            />\r\n          </div>\r\n        </Flex>\r\n      </Flex>\r\n      <div className=\"table-responsive\">\r\n        {isClientsLoading ? (\r\n          <Loading cover=\"content\" />\r\n        ) : (\r\n          <Table\r\n            columns={tableColumns}\r\n            dataSource={clients}\r\n            rowKey=\"id\"\r\n            rowSelection={{\r\n              selectedRowKeys: selectedRowKeys,\r\n              type: \"checkbox\",\r\n              preserveSelectedRowKeys: false,\r\n              ...rowSelection,\r\n            }}\r\n            onRow={(row) => ({\r\n              onClick: () => editCLient(row),\r\n            })}\r\n            row\r\n          />\r\n        )}\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\r\n\r\nconst Groups = () => {\r\n  return <div>Client groups component works!</div>;\r\n};\r\n\r\nexport default Groups;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Form, Button, Input, Row, Col } from \"antd\";\r\nimport { ROW_GUTTER } from \"constants/ThemeConstant\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport {\r\n  useHistory,\r\n  useParams,\r\n} from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { useFetching } from \"hooks/useFetching\";\r\nimport Loading from \"components/shared-components/Loading\";\r\n\r\nexport function EditClient() {\r\n  const params = useParams();\r\n  const history = useHistory();\r\n\r\n  const [client, setClient] = useState();\r\n  const [updateIsLoading, setUpdateIsLoading] = useState(false);\r\n\r\n  const [fetchClient, isClientLoading, isError] = useFetching(async () => {\r\n    const response = await fetch(\r\n      `https://jsonplaceholder.typicode.com/users/${params.id}`\r\n    );\r\n    const data = await response.json();\r\n    setClient(data);\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchClient();\r\n  }, []);\r\n\r\n  const handleFormChange = (allValues) => {\r\n    setClient((prevClient) => ({ ...prevClient, ...allValues }));\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      setUpdateIsLoading(true);\r\n      await fetch(`https://jsonplaceholder.typicode.com/users/${params.id}`, {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(client),\r\n      });\r\n      setTimeout(() => {\r\n        setUpdateIsLoading(false);\r\n        history.push(\"../../clients/list\");\r\n      }, 1000);\r\n    } catch (error) {}\r\n  };\r\n\r\n  if (isClientLoading || updateIsLoading) return <Loading cover=\"content\" />;\r\n\r\n  return (\r\n    <>\r\n      <Flex\r\n        alignItems=\"center\"\r\n        mobileFlex={false}\r\n        className=\"text-center text-md-left\"\r\n      ></Flex>\r\n      <div className=\"mt-4\">\r\n        <Form\r\n          name=\"client-info\"\r\n          layout=\"vertical\"\r\n          initialValues={client}\r\n          onSubmitCapture={handleSubmit}\r\n          onValuesChange={handleFormChange}\r\n        >\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={16}>\r\n              <Row gutter={ROW_GUTTER}>\r\n                <Col xs={24} sm={24} md={12}>\r\n                  <Form.Item\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Please input name!\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col xs={24} sm={24} md={12}>\r\n                  <Form.Item\r\n                    label=\"Username\"\r\n                    name=\"username\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Please input username!\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col xs={24} sm={24} md={12}>\r\n                  <Form.Item\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        type: \"email\",\r\n                        message: \"Please enter a valid email!\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col xs={24} sm={24} md={12}>\r\n                  <Form.Item label=\"Phone\" name=\"phone\">\r\n                    <Input />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col xs={24} sm={24} md={12}>\r\n                  <Form.Item label=\"Website\" name=\"website\">\r\n                    <Input />\r\n                  </Form.Item>\r\n                </Col>\r\n                <div className=\"w-100 ml-2 mb-2\">Address</div>\r\n                <Col xs={24} sm={24} md={12}>\r\n                  <Form.Item label=\"Street\" name={[\"address\", \"street\"]}>\r\n                    <Input />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col xs={24} sm={24} md={12}>\r\n                  <Form.Item label=\"Suite\" name={[\"address\", \"suite\"]}>\r\n                    <Input />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col xs={24} sm={24} md={12}>\r\n                  <Form.Item label=\"City\" name={[\"address\", \"city\"]}>\r\n                    <Input />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col xs={24} sm={24} md={12}>\r\n                  <Form.Item label=\"Zipcode\" name={[\"address\", \"zipcode\"]}>\r\n                    <Input />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col xs={24} sm={24} md={24}>\r\n                  <Form.Item label=\"Company\" name={[\"company\", \"name\"]}>\r\n                    <Input />\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Save Change\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditClient;\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport List from \"./list\";\r\nimport Groups from \"./groups\";\r\nimport EditClient from \"./edit-client\";\r\nconst Clients = ({ match }) => {\r\n  return (\r\n    <Switch>\r\n      <Redirect exact from={`${match.url}`} to={`${match.url}/clients`} />\r\n      <Route path={`${match.url}/list`} component={List} />\r\n      <Route path={`${match.url}/groups`} component={Groups} />\r\n      <Route path={`${match.url}/edit-client/:id`} component={EditClient} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Clients;\r\n"],"sourceRoot":""}